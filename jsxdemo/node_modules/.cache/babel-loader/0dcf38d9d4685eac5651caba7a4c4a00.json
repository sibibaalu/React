{"ast":null,"code":"var _jsxFileName = \"C:\\\\Practise\\\\React\\\\jsxdemo\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.componentDidMount = () => {\n      window.navigator.geolocation.getCurrentPosition(position => this.setState({\n        lat: position.coords.latitude\n      }), err => this.setState({\n        errorMessage: err.message\n      }));\n    };\n\n    this.state = {\n      lat: null,\n      errorMessage: \"\"\n    };\n  }\n\n  render() {\n    const getDiv = () => {\n      if (this.state.errorMessage && !this.state.lat) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 24\n          }\n        }, \"Error Message : \", this.state.errorMessage);\n      }\n\n      if (this.state.lat && !this.state.errorMessage) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 24\n          }\n        }, \"Latitude : \", this.state.lat);\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    };\n\n    return getDiv();\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 17\n  }\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["C:/Practise/React/jsxdemo/src/index.js"],"names":["React","ReactDOM","App","Component","constructor","props","state","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","lat","coords","latitude","err","errorMessage","message","render","getDiv","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAG9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SADnBC,KACmB,GADX,EACW;;AAAA,SAQnBC,iBARmB,GAQC,MAAM;AACtBC,MAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACKC,QAAD,IAAc,KAAKC,QAAL,CAAc;AAAEC,QAAAA,GAAG,EAAEF,QAAQ,CAACG,MAAT,CAAgBC;AAAvB,OAAd,CADlB,EAEKC,GAAD,IAAS,KAAKJ,QAAL,CAAc;AAAEK,QAAAA,YAAY,EAAED,GAAG,CAACE;AAApB,OAAd,CAFb;AAIH,KAbkB;;AAEf,SAAKb,KAAL,GAAa;AACTQ,MAAAA,GAAG,EAAE,IADI;AAETI,MAAAA,YAAY,EAAE;AAFL,KAAb;AAIH;;AASDE,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAG,MAAM;AACjB,UAAI,KAAKf,KAAL,CAAWY,YAAX,IAA2B,CAAC,KAAKZ,KAAL,CAAWQ,GAA3C,EAAgD;AAC5C,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAsB,KAAKR,KAAL,CAAWY,YAAjC,CAAP;AACH;;AAED,UAAI,KAAKZ,KAAL,CAAWQ,GAAX,IAAkB,CAAC,KAAKR,KAAL,CAAWY,YAAlC,EAAgD;AAC5C,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiB,KAAKZ,KAAL,CAAWQ,GAA5B,CAAP;AACH;;AACD,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KATD;;AAUA,WAAOO,MAAM,EAAb;AACH;;AA9B6B;;AAiClCpB,QAAQ,CAACmB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBE,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass App extends React.Component {\r\n    \r\n    state = {}\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lat: null,\r\n            errorMessage: \"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            (position) => this.setState({ lat: position.coords.latitude }),\r\n            (err) => this.setState({ errorMessage: err.message })\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const getDiv = () => {\r\n            if (this.state.errorMessage && !this.state.lat) {\r\n                return <div>Error Message : {this.state.errorMessage}</div>;\r\n            }\r\n\r\n            if (this.state.lat && !this.state.errorMessage) {\r\n                return <div>Latitude : {this.state.lat}</div>;\r\n            }\r\n            return <div>Loading...</div>;\r\n        };\r\n        return getDiv();\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"]},"metadata":{},"sourceType":"module"}