{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport youtube from \"../api/Youtube\";\nconst KEY = \"AIzaSyC6yphgB1k6vdqwEm8E984eI_1k6B7C4WM\";\n\nconst UseVideos = defaultSearchText => {\n  const [responseVideos, setResponseVideos] = useState([]);\n  useEffect(() => {\n    searchVideo(defaultSearchText);\n  }, [defaultSearchText]);\n\n  const searchVideo = async searchText => {\n    const response = await youtube.get(\"/search\", {\n      params: {\n        part: \"snippet\",\n        type: \"video\",\n        maxResults: \"10\",\n        key: KEY,\n        q: searchText\n      }\n    });\n    setResponseVideos(response.data.items);\n  };\n\n  return [responseVideos, searchVideo];\n};\n\nexport default UseVideos;","map":{"version":3,"sources":["C:/Practise/React/jsxdemo/src/TubeVideosHooks/UseVideos.js"],"names":["React","useState","useEffect","youtube","KEY","UseVideos","defaultSearchText","responseVideos","setResponseVideos","searchVideo","searchText","response","get","params","part","type","maxResults","key","q","data","items"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,MAAMC,GAAG,GAAG,yCAAZ;;AAEA,MAAMC,SAAS,GAAIC,iBAAD,IAAuB;AACvC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW,CAACH,iBAAD,CAAX;AACD,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;;AAIA,QAAMG,WAAW,GAAG,MAAOC,UAAP,IAAsB;AACxC,UAAMC,QAAQ,GAAG,MAAMR,OAAO,CAACS,GAAR,CAAY,SAAZ,EAAuB;AAC5CC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,SADA;AAENC,QAAAA,IAAI,EAAE,OAFA;AAGNC,QAAAA,UAAU,EAAE,IAHN;AAINC,QAAAA,GAAG,EAAEb,GAJC;AAKNc,QAAAA,CAAC,EAAER;AALG;AADoC,KAAvB,CAAvB;AAUAF,IAAAA,iBAAiB,CAACG,QAAQ,CAACQ,IAAT,CAAcC,KAAf,CAAjB;AACD,GAZD;;AAcA,SAAO,CAACb,cAAD,EAAiBE,WAAjB,CAAP;AACD,CAtBD;;AAwBA,eAAeJ,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport youtube from \"../api/Youtube\";\r\n\r\nconst KEY = \"AIzaSyC6yphgB1k6vdqwEm8E984eI_1k6B7C4WM\";\r\n\r\nconst UseVideos = (defaultSearchText) => {\r\n  const [responseVideos, setResponseVideos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    searchVideo(defaultSearchText);\r\n  }, [defaultSearchText]);\r\n\r\n  const searchVideo = async (searchText) => {\r\n    const response = await youtube.get(\"/search\", {\r\n      params: {\r\n        part: \"snippet\",\r\n        type: \"video\",\r\n        maxResults: \"10\",\r\n        key: KEY,\r\n        q: searchText,\r\n      },\r\n    });\r\n\r\n    setResponseVideos(response.data.items);\r\n  };\r\n\r\n  return [responseVideos, searchVideo];\r\n};\r\n\r\nexport default UseVideos;\r\n"]},"metadata":{},"sourceType":"module"}