{"ast":null,"code":"var _jsxFileName = \"C:\\\\Practise\\\\React\\\\jsxdemo\\\\src\\\\TubeVideosHooks\\\\AppTube.js\";\nimport React, { useState, useEffect } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport youtube from \"../api/Youtube\";\nimport SuggVideoList from \"./SuggVideoList\";\nimport MainVideo from \"./MainVideo\";\nconst KEY = \"AIzaSyC6yphgB1k6vdqwEm8E984eI_1k6B7C4WM\";\n\nconst AppTube = () => {\n  const [selectedVideo, setselectedVideo] = useState(null);\n\n  const handleSubmit = async searchText => {\n    const response = await youtube.get(\"/search\", {\n      params: {\n        part: \"snippet\",\n        type: \"video\",\n        maxResults: \"10\",\n        key: KEY,\n        q: searchText\n      }\n    });\n    setResponseVideos(response.data.items);\n    setselectedVideo(response.data.items[0]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    handleSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"eleven wide column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MainVideo, {\n    video: selectedVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"five wide column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SuggVideoList, {\n    videos: responseVideos,\n    onVideoSelect: setselectedVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default AppTube;","map":{"version":3,"sources":["C:/Practise/React/jsxdemo/src/TubeVideosHooks/AppTube.js"],"names":["React","useState","useEffect","SearchBar","youtube","SuggVideoList","MainVideo","KEY","AppTube","selectedVideo","setselectedVideo","handleSubmit","searchText","response","get","params","part","type","maxResults","key","q","setResponseVideos","data","items","responseVideos"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,GAAG,GAAG,yCAAZ;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAEpB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMU,YAAY,GAAG,MAAOC,UAAP,IAAsB;AACzC,UAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACU,GAAR,CAAY,SAAZ,EAAuB;AAC5CC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,SADA;AAENC,QAAAA,IAAI,EAAE,OAFA;AAGNC,QAAAA,UAAU,EAAE,IAHN;AAINC,QAAAA,GAAG,EAAEZ,GAJC;AAKNa,QAAAA,CAAC,EAAER;AALG;AADoC,KAAvB,CAAvB;AAUAS,IAAAA,iBAAiB,CAACR,QAAQ,CAACS,IAAT,CAAcC,KAAf,CAAjB;AACAb,IAAAA,gBAAgB,CAACG,QAAQ,CAACS,IAAT,CAAcC,KAAd,CAAoB,CAApB,CAAD,CAAhB;AACD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEZ,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,MAAM,EAAEe,cADV;AAEE,IAAA,aAAa,EAAEd,gBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,CAFF,CADF;AAkBD,CArCD;;AAuCA,eAAeF,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport youtube from \"../api/Youtube\";\r\nimport SuggVideoList from \"./SuggVideoList\";\r\nimport MainVideo from \"./MainVideo\";\r\n\r\nconst KEY = \"AIzaSyC6yphgB1k6vdqwEm8E984eI_1k6B7C4WM\";\r\n\r\nconst AppTube = () => {\r\n  \r\n  const [selectedVideo, setselectedVideo] = useState(null);\r\n\r\n  const handleSubmit = async (searchText) => {\r\n    const response = await youtube.get(\"/search\", {\r\n      params: {\r\n        part: \"snippet\",\r\n        type: \"video\",\r\n        maxResults: \"10\",\r\n        key: KEY,\r\n        q: searchText,\r\n      },\r\n    });\r\n\r\n    setResponseVideos(response.data.items);\r\n    setselectedVideo(response.data.items[0]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui container\">\r\n      <SearchBar handleSubmit={handleSubmit} />\r\n      <div className=\"ui grid\">\r\n        <div className=\"ui row\">\r\n          <div className=\"eleven wide column\">\r\n            <MainVideo video={selectedVideo} />\r\n          </div>\r\n          <div className=\"five wide column\">\r\n            <SuggVideoList\r\n              videos={responseVideos}\r\n              onVideoSelect={setselectedVideo}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppTube;\r\n"]},"metadata":{},"sourceType":"module"}